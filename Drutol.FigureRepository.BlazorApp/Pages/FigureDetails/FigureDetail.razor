@page "/Figures/{Name}"
@using Drutol.FigureRepository.BlazorApp.Interfaces.Figures
@using Drutol.FigureRepository.BlazorApp.Util
@using Drutol.FigureRepository.Shared.Models.Figure
@using Drutol.FigureRepository.BlazorApp.Pages.FigureDetails.DetailComponents


@inject IFigureProvider FigureProvider;
@inject IFigureIconProvider FigureIconProvider;

<style>
    .BuyMenuPopover {
        width: 300px
    }
</style>

@if (IsFigureDataReady)
{
    @if (Figure != null)
    {
        <MudHidden Breakpoint="Breakpoint.SmAndUp">
            <MudBreadcrumbs Items="_breadcrumbs" />
        </MudHidden>

        <MudGrid Style="width: 100% !important;" Spacing="0"> 
            <MudItem xs="12" sm="5" Class="pa-4 rounded" Style="@($"background-color: {Theme.Palette.BackgroundGrey}")">
                <FigureDetailGallery Figure="Figure"/>
            </MudItem>
            <MudItem xs="12" sm="7">
                <FigureDetailCheckout Figure="Figure"/>
                <FigureDetailDescription Figure="Figure"/>
                <FigureDetailListing Figure="Figure"/>
            </MudItem>
        </MudGrid>

        <HeadContent>
            <!-- Primary Meta Tags -->
            <title>@Figure.FigureMetadata.Title</title>
            <meta name="description" content="@Figure.FigureMetadata.Description">

            <!-- Open Graph / Facebook -->
            <meta property="og:type" content="@Figure.FigureMetadata.Type">
            <meta property="og:url" content="@Figure.FigureMetadata.Url">
            <meta property="og:title" content="@Figure.FigureMetadata.Title">
            <meta property="og:description" content="@Figure.FigureMetadata.Description">
            <meta property="og:image" content="@Figure.FigureMetadata.ImageUrl">

            <meta property="og:image:type" content="@Figure.FigureMetadata.ImageMimeType">
            <meta property="og:image:width" content="@Figure.FigureMetadata.ImageWidth">
            <meta property="og:image:height" content="@Figure.FigureMetadata.ImageHeight">

            <!-- Twitter -->
            <meta property="twitter:card" content="summary_large_image">
            <meta property="twitter:url" content="@Figure.FigureMetadata.Url">
            <meta property="twitter:title" content="@Figure.FigureMetadata.Title">
            <meta property="twitter:description" content="@Figure.FigureMetadata.Description">
            <meta property="twitter:image" content="@Figure.FigureMetadata.ImageUrl">
        </HeadContent>
    }
    else
    {
        <MudText>Not Found</MudText>
    }
}
else
{
    <MudContainer Class="d-flex justify-center align-center" Style="height: 100%">
        <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
    </MudContainer>
}

@code {
 

    [CascadingParameter]
    protected ThemeWrapper Theme { get; set; }

    [Parameter]
    public string Name { get; set; }

    public bool IsFigureDataReady { get; set; }

    public Figure? Figure { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await FigureProvider.DataReady.Task;

        IsFigureDataReady = true;

        Figure = FigureProvider.Figures.FirstOrDefault(figure => figure.Name.Equals(Name));

        if (Figure == null)
            return;

        _breadcrumbs = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", "/", false, "home"),
            new BreadcrumbItem("Figures", "/Figures"),
            new BreadcrumbItem(Figure.Name, $"/Figures/{Figure.Name}")
        };

        await base.OnParametersSetAsync();
    }

    private List<BreadcrumbItem> _breadcrumbs;
}
