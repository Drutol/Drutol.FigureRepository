@page "/Figures/{Name}"

@using MudBlazor
@using Drutol.FigureRepository.BlazorApp.Pages.Figures.DetailComponents
@using Drutol.FigureRepository.BlazorApp.Interfaces.Figures
@using Drutol.FigureRepository.BlazorApp.Util
@using Drutol.FigureRepository.Shared.Models.Figure

@inject IFigureProvider FigureProvider;
@inject IFigureIconProvider FigureIconProvider;

<style>
    .BuyMenuPopover {
        width: 300px
    }
</style>

@if (IsFigureDataReady)
{
    @if (Figure != null)
    {
        <MudGrid Style="width: 100% !important;" Spacing="0"> 
            <MudItem xs="12" sm="5" Class="pa-4 rounded" Style="@($"background-color: {Theme.Palette.BackgroundGrey}")">
                <FigureDetailGallery Figure="Figure"/>
            </MudItem>
            <MudItem xs="12" sm="7">
                <FigureDetailCheckout Figure="Figure"/>
                <FigureDetailDescription Figure="Figure"/>
                <FigureDetailListing Figure="Figure"/>
            </MudItem>
        </MudGrid>
    }
    else
    {
        <MudText>Not Found</MudText>
    }
}
else
{
    <MudContainer Class="d-flex justify-center align-center" Style="height: 100%">
        <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
    </MudContainer>
}

@code {
 

    [CascadingParameter]
    protected ThemeWrapper Theme { get; set; }

    [Parameter]
    public string Name { get; set; }

    public bool IsFigureDataReady { get; set; }

    public Figure? Figure { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await FigureProvider.DataReady.Task;

        IsFigureDataReady = true;

        Figure = FigureProvider.Figures.FirstOrDefault(figure => figure.Name.Equals(Name));

        if (Figure == null)
            return;

        await base.OnParametersSetAsync();
    }
}
