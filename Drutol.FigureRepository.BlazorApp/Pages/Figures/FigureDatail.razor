@page "/Figures/{Name}"

@using MudBlazor
@using Drutol.FigureRepository.BlazorApp.Infrastructure
@using Drutol.FigureRepository.BlazorApp.Models
@using Drutol.FigureRepository.BlazorApp.Util

@inject FigureProvider FigureProvider;

<MudBreadcrumbs Items="_breadcrumbs"/>

@if (Figure != null)
{
    <MudGrid Class="mt-2">
        <MudItem xs="12" sm="5" Class="pa-8 rounded" Style="@($"background-color: {Theme.Palette.BackgroundGrey}")">
            <MudText Typo="Typo.h4" Class="border-l-2 ml-4 pl-4 mud-border-primary">Gallery</MudText>
            <MudCarousel Id="Carousel" Style="height: 496px" ShowBullets="true" ShowArrows="true" AutoCycle="false" TData="object">
                @foreach (var photo in Figure.Media)
                {
                    <MudCarouselItem Transition="Transition.Slide" Class="pa-8 d-flex justify-center rounded">
                        <MudImage Src="@photo.Url" ObjectFit="ObjectFit.Cover" Class="rounded" Elevation="3" Height="400"/>
                    </MudCarouselItem>
                }
            </MudCarousel>
            <MudGrid Spacing="0" Class="mt-2 justify-center" Justify="Justify.SpaceBetween">
                @foreach (var photo in Figure.Media)
                {
                    <MudItem Class="ma-2" Style="width: 100px; height: 100px;">
                        <MudButton Class="d-flex" Style="padding: 0px" 
                                   Variant="Variant.Filled" Color="Color.Primary"
                                   DisableElevation="false">
                            <MudImage Src="@photo.Url" ObjectFit="ObjectFit.Cover" Class="rounded align-center" Width="100" Height="100"/>
                        </MudButton>
                    </MudItem>
                }
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="7">
            <MudPaper Elevation="3" Class="pa-8">
                <MudText Typo="Typo.h4" Class="border-l-2 ml-4 mud-border-primary">@Figure.Name</MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>
}
else
{
    <MudText>Not Found</MudText>
}


@code {
    [CascadingParameter]
    protected ThemeWrapper Theme { get; set; }

    [Parameter]
    public string Name { get; set; }

    private readonly List<BreadcrumbItem> _breadcrumbs = new()
    {
        new BreadcrumbItem("Home", "/", false, "home"),
        new BreadcrumbItem("Figures", "/Figures")
    };

    public Figure? Figure { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(_breadcrumbs.Count == 3)
            _breadcrumbs.RemoveAt(2);
        _breadcrumbs.Add(new BreadcrumbItem(Name, $"/Figures/{Name}"));
        Figure = FigureProvider.Figures.FirstOrDefault(figure => figure.Name.Equals(Name));
    }
}
