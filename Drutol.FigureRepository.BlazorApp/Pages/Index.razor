@page "/"

@using MudBlazor
@using Drutol.FigureRepository.BlazorApp.Infrastructure
@using Drutol.FigureRepository.BlazorApp.Interfaces
@using Drutol.FigureRepository.BlazorApp.Util
@using Drutol.FigureRepository.Shared.Models
@using Drutol.FigureRepository.Shared.Models.Enums

@inject IFigureProvider FigureProvider
@inject IFigureIconProvider FigureIconProvider
@inject IJSRuntime JS

<style>
/*    #Carousel :nth-child(2) {
        flex-grow: 0 !important;
    }  
    
    #Carousel :nth-child(2) :nth-child(1)  {
        align-self: center !important;
    }  
    
    #Carousel :nth-child(2) :nth-child(1) :nth-child(1) {
        flex-direction: column !important;
    }*/

    .CarouselBullet {
        color: var(--mud-palette-primary-darken) !important;
    }

    #Gallery {
        align-self: center;
    }

</style>

<MudGrid>
    <MudItem Id="Gallery" xs="12" sm="6">
        <MudPaper Elevation="3">
            @if (!FiguresReady)
            {
                <MudContainer Class="pa-8" Style="height: 464px;">
                    <MudSkeleton Animation="Animation.Wave" Height="100%"
                                 Style="transform-origin: unset !important; transform: unset !important;"/>
                </MudContainer>
            }
            else
            {
                <MudCarousel Id="Carousel" Style="height: 464px" ShowBullets="false" BulletsClass="CarouselBullet" ShowArrows="true" AutoCycle="false" TData="object" @bind-SelectedIndex="SelectedCarouselIndex">
                    @foreach (var photo in CarouselPhotos)
                    {
                        var figure = FigureDictionary[photo];
                        <MudCarouselItem Transition="Transition.Slide" Style="@($"background-color: {Theme.Palette.BackgroundGrey}")" Class="pa-8 d-flex justify-center rounded">
                            <MudPaper Elevation="3" Class="rounded" Style="position: relative">
                                <MudImage Src="@photo.Url" Class="rounded" ObjectFit="ObjectFit.Cover" Height="400" Style="@($"object-position: {photo.Gravity.ToCssValue()};min-width: 325px")" @onclick="OnImageClick"/>
                                <MudStack Row="true" Class="rounded pa-2" Style="background: linear-gradient(0deg, rgba(0, 0, 0, .8) 20%, rgba(0, 0, 0, 0) 100%); position: absolute; bottom: 0; width: 100%; height: 20%;">
                                    <MudIcon Icon="@FigureIconProvider.GetForFigure(figure)" Size="Size.Large" Style="color: white; font-size: 4rem;"/>
                                    <MudStack Spacing="0" Style="align-self: center">
                                        <MudText Style="color: white" Typo="Typo.body1">@figure.Name</MudText>
                                        @{
                                            var publishEvent = figure.Timeline.FirstOrDefault(entry => entry.Event == FigureTimelineEvent.Publish);
                                        }
                                        @if (publishEvent != null)
                                        {
                                            <MudText Typo="Typo.body2" Style="color: lightgrey; font-style: italic; font-size: .8rem">Published: @publishEvent.Date.ToString("d")</MudText>
                                        }
                                        else
                                        {
                                            <MudText Typo="Typo.body2" Style="color: lightgrey; font-style: italic; font-size: .8rem">Published: TBD</MudText>
                                        }
                                    </MudStack>
                                    <MudSpacer/>
                                    <MudFab StartIcon="@Icons.Outlined.ReadMore" Size="Size.Small" Color="Color.Primary" Style="align-self: center"/>
                                </MudStack>
                            </MudPaper>

                        </MudCarouselItem>
                    }
                </MudCarousel>
            }
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" Class="d-flex flex-column">
        <MudPaper Elevation="3" Class="pa-8 ma-4">
            <MudStack Spacing="0">
                <MudItem xs="12" Class="border-l-2 pl-4 mud-border-primary">
                    <MudText Typo="Typo.h3" Align="Align.Left">Welcome!</MudText>
                </MudItem>   
                <MudText Typo="Typo.body1" Class="mt-4">
                    Welcome to my figure repository page. I'm hosting here figures I've sculpted in the past and published online.
                    It serves as:
                </MudText>
                <MudStack Class="mt-1" Row="true" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.ChevronRight" Color="Color.Primary"/>
                    <MudText Typo="Typo.body2" Align="Align.Center"><strong>Archive</strong></MudText>
                </MudStack>
                <MudStack Class="mt-1" Row="true" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.ChevronRight" Color="Color.Primary"/>
                    <MudText Typo="Typo.body2" Align="Align.Center"><strong>Download Service</strong></MudText>
                </MudStack>

                <MudText Class="mt-2" Typo="Typo.body1">
                    I'm purely an hobbyist, sculpting in Blender. Figures are Resin Printed (SLA) on Elegoo Saturn. Files provided are usually:
                </MudText>

                <MudStack Class="mt-1" Row="true" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.ChevronRight" Color="Color.Primary"/>
                    <MudText Typo="Typo.body2" Align="Align.Center"><strong>Blender Scenes</strong></MudText>
                </MudStack>
                <MudStack Class="mt-1" Row="true" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.ChevronRight" Color="Color.Primary"/>
                    <MudText Typo="Typo.body2" Align="Align.Center"><strong>Pre-Supported Lychee Slicer Scenes</strong></MudText>
                </MudStack>
                <MudStack Class="mt-1" Row="true" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.ChevronRight" Color="Color.Primary"/>
                    <MudText Typo="Typo.body2" Align="Align.Center"><strong>STLs</strong></MudText>
                </MudStack>

                <MudText Class="mt-2" Typo="Typo.body1">
                    There are no physical options available. You can purchase the models via CGTrader listings or as NFTs on GameStop NFT marketplace.
                </MudText>

            </MudStack>

            <MudSpacer/>

            <MudContainer Class="d-flex justify-end align-self-end">
                <MudButton Variant="Variant.Filled" Href="/Figures"Color="Color.Primary" Size="Size.Large">Browse Figurines</MudButton>
            </MudContainer>
        </MudPaper>
    </MudItem>
</MudGrid>


<MudPaper Class="ma-8 pa-8" Elevation="3">
    <MudItem Class="border-l-2 pl-4 mud-border-primary">
        <MudText Typo="Typo.h4" Align="Align.Left">FAQ</MudText>
    </MudItem>   
    
    <FaqList/>
</MudPaper>



@code {
    [CascadingParameter]
    protected ThemeWrapper Theme { get; set; }

    public Dictionary<FigureMedia, Figure> FigureDictionary { get; } = new();
    public List<FigureMedia> CarouselPhotos { get; } = new();
    public bool FiguresReady { get; set; }

    private void OnImageClick()
    {
        CarouselPhotos.OpenGallery(JS, SelectedCarouselIndex);
    }

    protected override async Task OnInitializedAsync()
    {
        if (!FigureProvider.DataReady.Task.IsCompleted)
            await FigureProvider.DataReady.Task;

        foreach (var figure in FigureProvider.Figures)
        {
            foreach (var figureMedium in figure.Media)
            {
                if (figureMedium.Display.HasFlag(FigurePhotoIntendedDisplay.HomeShowcase))
                {
                    CarouselPhotos.Add(figureMedium);
                    FigureDictionary[figureMedium] = figure;
                }
            }
        }

        CarouselPhotos.Shuffle();
        FiguresReady = true;
    }

    public int SelectedCarouselIndex { get; set; }
}